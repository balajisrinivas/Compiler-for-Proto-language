
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x9b;\xea>\xbbp\xe1\x19*\x0b\x88\x9b\xb7\xda\\\xbe'
    
_lr_action_items = {'DO':([16,25,27,32,34,35,38,40,43,44,52,53,56,57,58,60,65,72,73,74,75,77,78,79,83,86,101,109,110,111,112,114,116,118,119,121,122,125,127,129,130,131,132,134,136,139,140,141,142,144,146,147,],[-6,27,27,-48,-41,-40,-54,-47,-81,-49,-44,-46,-53,-52,86,-45,-38,-81,27,-22,-37,-36,-39,-18,-43,27,-34,-51,-50,27,-21,27,-35,-55,-81,-27,-42,-56,-26,-20,-33,-81,-61,-63,-19,27,-62,-65,-64,-25,27,-28,]),'RETURN':([16,25,27,43,72,73,74,79,86,101,111,112,114,121,127,129,130,136,139,144,146,147,],[-6,31,31,-81,-81,31,-22,-18,31,-34,31,-21,31,-27,-26,-20,-33,-19,31,-25,31,-28,]),'LSQUARE':([4,7,8,9,15,22,28,32,34,35,38,40,44,52,56,57,71,84,109,110,118,119,125,131,141,142,],[-12,-11,12,-10,-13,12,50,-48,-53,-52,-54,-47,-49,50,-53,-52,12,120,-51,-50,-55,133,-56,133,-65,-64,]),'THEN':([32,34,35,38,40,44,52,53,56,57,60,65,70,75,77,78,83,109,110,116,118,119,122,125,131,132,134,140,141,142,],[-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,-45,-38,111,-37,-36,-39,-43,-51,-50,-35,-55,-81,-42,-56,-81,-61,-63,-62,-65,-64,]),'VOID':([0,1,3,6,16,18,37,43,48,54,72,79,101,121,127,129,130,136,144,147,],[4,4,-4,-5,-6,4,-7,4,4,4,4,-18,-34,-27,-26,-20,-33,-19,-25,-28,]),'EQUAL':([32,34,35,38,40,44,52,53,56,57,58,60,64,65,68,70,75,77,78,82,83,100,103,109,110,116,117,118,119,122,125,131,132,134,135,140,141,142,],[-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,90,-45,90,-38,90,90,-37,-36,-39,90,-43,90,90,-51,-50,90,90,-55,-81,90,-56,-81,-61,-63,90,-62,-65,-64,]),'WHILE':([16,25,27,43,49,72,73,74,79,86,101,111,112,114,121,127,129,130,136,139,144,146,147,],[-6,29,29,-81,81,-81,29,-22,-18,29,-34,29,-21,29,-27,-26,-20,-33,-19,29,-25,29,-28,]),'PRINT':([16,25,27,43,72,73,74,79,86,101,111,112,114,121,127,129,130,136,139,144,146,147,],[-6,30,30,-81,-81,30,-22,-18,30,-34,30,-21,30,-27,-26,-20,-33,-19,30,-25,30,-28,]),'NEW':([29,31,39,42,50,51,55,59,61,66,76,81,85,87,88,89,90,91,92,93,94,95,96,97,98,99,120,124,126,],[54,54,54,54,54,54,-79,-80,54,54,54,54,-71,54,-78,-74,-73,-72,-76,-66,-75,-68,-69,-77,-67,-70,54,54,54,]),'DIV':([32,34,35,38,40,44,52,53,56,57,58,60,64,65,68,70,75,77,78,82,83,100,103,109,110,116,117,118,119,122,125,131,132,134,135,140,141,142,],[-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,96,-45,96,-38,96,96,-37,-36,-39,96,-43,96,96,-51,-50,96,96,-55,-81,96,-56,-81,-61,-63,96,-62,-65,-64,]),'TRUE':([16,25,27,29,31,33,39,42,43,46,50,51,55,59,61,66,67,72,73,74,76,79,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,111,112,114,120,121,124,126,127,129,130,136,139,143,144,146,147,],[-6,32,32,32,32,32,32,32,-81,32,32,32,-79,-80,32,32,32,-81,32,-22,32,-18,32,-71,32,32,-78,-74,-73,-72,-76,-66,-75,-68,-69,-77,-67,-70,-34,32,-21,32,32,-27,32,32,-26,-20,-33,-19,32,32,-25,32,-28,]),'MINUS':([29,31,32,34,35,38,39,40,42,44,50,51,52,53,55,56,57,58,59,60,61,64,65,66,68,70,75,76,77,78,81,82,83,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,109,110,116,117,118,119,120,122,124,125,126,131,132,134,135,140,141,142,],[55,55,-48,-41,-40,-54,55,-47,55,-49,55,55,-44,-46,-79,-53,-52,98,-80,-45,55,98,-38,55,98,98,-37,55,-36,-39,55,98,-43,-71,55,-78,-74,-73,-72,-76,-66,-75,-68,-69,-77,-67,-70,98,98,-51,-50,98,98,-55,-81,55,98,55,-56,55,-81,-61,-63,98,-62,-65,-64,]),'RSQUARE':([12,32,34,35,38,40,44,52,53,56,57,60,65,75,77,78,82,83,109,110,116,118,119,120,122,125,131,132,133,134,135,140,141,142,],[15,-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,-45,-38,-37,-36,-39,118,-43,-51,-50,-35,-55,-81,15,-42,-56,-81,-61,141,-63,142,-62,-65,-64,]),'RPAREN':([18,21,23,24,26,32,34,35,38,40,44,52,53,56,57,60,65,66,68,69,75,77,78,80,83,100,102,103,104,105,107,108,109,110,116,118,119,122,125,131,132,134,137,140,141,142,143,145,],[-81,25,-9,-8,-17,-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,-45,-38,-81,109,110,-37,-36,-39,-16,-43,123,-58,-60,-57,125,-30,-29,-51,-50,-35,-55,-81,-42,-56,-81,-61,-63,-59,-62,-65,-64,-81,146,]),'SEMICOLON':([13,14,19,20,31,32,34,35,38,40,44,47,52,53,56,57,60,62,63,64,65,67,75,77,78,83,106,107,108,109,110,116,117,118,119,122,123,125,126,131,132,134,138,140,141,142,],[16,-15,-14,-15,-81,-48,-41,-40,-54,-47,-49,79,-44,-46,-53,-52,-45,101,-32,-31,-38,-81,-37,-36,-39,-43,126,-30,-29,-51,-50,-35,130,-55,-81,-42,136,-56,-81,-81,-61,-63,143,-62,-65,-64,]),'COMMA':([14,20,26,32,34,35,38,40,44,52,53,56,57,60,65,75,77,78,83,103,109,110,116,118,119,122,125,131,132,134,140,141,142,],[17,17,48,-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,-45,-38,-37,-36,-39,-43,124,-51,-50,-35,-55,-81,-42,-56,-81,-61,-63,-62,-65,-64,]),'INCREMENT':([16,25,27,29,31,34,35,39,42,43,45,50,51,55,56,57,59,61,66,67,72,73,74,76,79,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,111,112,114,118,120,121,124,126,127,129,130,136,139,143,144,146,147,],[-6,33,33,33,33,-41,-40,33,33,-81,77,33,33,-79,-41,-40,-80,33,33,33,-81,33,-22,33,-18,33,-71,33,33,-78,-74,-73,-72,-76,-66,-75,-68,-69,-77,-67,-70,-34,33,-21,33,-55,33,-27,33,33,-26,-20,-33,-19,33,33,-25,33,-28,]),'LTHANEQ':([32,34,35,38,40,44,52,53,56,57,58,60,64,65,68,70,75,77,78,82,83,100,103,109,110,116,117,118,119,122,125,131,132,134,135,140,141,142,],[-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,94,-45,94,-38,94,94,-37,-36,-39,94,-43,94,94,-51,-50,94,94,-55,-81,94,-56,-81,-61,-63,94,-62,-65,-64,]),'PLUS':([32,34,35,38,40,44,52,53,56,57,58,60,64,65,68,70,75,77,78,82,83,100,103,109,110,116,117,118,119,122,125,131,132,134,135,140,141,142,],[-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,93,-45,93,-38,93,93,-37,-36,-39,93,-43,93,93,-51,-50,93,93,-55,-81,93,-56,-81,-61,-63,93,-62,-65,-64,]),'IDENTIFIER':([4,7,8,9,15,16,17,22,25,27,29,31,33,39,42,43,46,50,51,55,59,61,66,67,71,72,73,74,76,79,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,111,112,114,120,121,124,126,127,129,130,136,139,143,144,146,147,],[-12,-11,14,-10,-13,-6,20,26,35,35,57,57,35,57,57,-81,35,57,57,-79,-80,57,57,35,20,-81,35,-22,57,-18,57,-71,35,57,-78,-74,-73,-72,-76,-66,-75,-68,-69,-77,-67,-70,-34,35,-21,35,57,-27,57,57,-26,-20,-33,-19,35,35,-25,35,-28,]),'$end':([0,1,2,3,5,6,10,11,16,37,79,101,121,127,129,130,136,144,147,],[-81,-81,-1,-4,0,-5,-3,-2,-6,-7,-18,-34,-27,-26,-20,-33,-19,-25,-28,]),'RBRACE':([16,43,72,73,74,79,101,112,113,114,115,121,127,128,129,130,136,144,147,],[-6,-81,-81,-81,-22,-18,-34,-21,-24,-81,129,-27,-26,-23,-20,-33,-19,-25,-28,]),'FOR':([16,25,27,43,72,73,74,79,86,101,111,112,114,121,127,129,130,136,139,144,146,147,],[-6,36,36,-81,-81,36,-22,-18,36,-34,36,-21,36,-27,-26,-20,-33,-19,36,-25,36,-28,]),'NEQUAL':([32,34,35,38,40,44,52,53,56,57,58,60,64,65,68,70,75,77,78,82,83,100,103,109,110,116,117,118,119,122,125,131,132,134,135,140,141,142,],[-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,89,-45,89,-38,89,89,-37,-36,-39,89,-43,89,89,-51,-50,89,89,-55,-81,89,-56,-81,-61,-63,89,-62,-65,-64,]),'EQUALS':([34,35,45,56,57,118,],[-41,-40,76,-41,-40,-55,]),'ELSE':([79,101,121,127,129,130,136,144,147,],[-18,-34,-27,139,-20,-33,-19,-25,-28,]),'LTHAN':([32,34,35,38,40,44,52,53,56,57,58,60,64,65,68,70,75,77,78,82,83,100,103,109,110,116,117,118,119,122,125,131,132,134,135,140,141,142,],[-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,92,-45,92,-38,92,92,-37,-36,-39,92,-43,92,92,-51,-50,92,92,-55,-81,92,-56,-81,-61,-63,92,-62,-65,-64,]),'STAR':([32,34,35,38,40,44,52,53,56,57,58,60,64,65,68,70,75,77,78,82,83,100,103,109,110,116,117,118,119,122,125,131,132,134,135,140,141,142,],[-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,95,-45,95,-38,95,95,-37,-36,-39,95,-43,95,95,-51,-50,95,95,-55,-81,95,-56,-81,-61,-63,95,-62,-65,-64,]),'LPAREN':([14,16,25,27,29,30,31,33,35,36,39,41,42,43,46,50,51,55,57,59,61,66,67,72,73,74,76,79,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,111,112,114,120,121,124,126,127,129,130,136,139,143,144,146,147,],[18,-6,39,39,39,61,39,39,66,67,39,69,39,-81,39,39,39,-79,66,-80,39,39,39,-81,39,-22,39,-18,39,-71,39,39,-78,-74,-73,-72,-76,-66,-75,-68,-69,-77,-67,-70,-34,39,-21,39,39,-27,39,39,-26,-20,-33,-19,39,39,-25,39,-28,]),'INTCONST':([16,25,27,29,31,33,39,42,43,46,50,51,55,59,61,66,67,72,73,74,76,79,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,111,112,114,120,121,124,126,127,129,130,136,139,143,144,146,147,],[-6,40,40,40,40,40,40,40,-81,40,40,40,-79,-80,40,40,40,-81,40,-22,40,-18,40,-71,40,40,-78,-74,-73,-72,-76,-66,-75,-68,-69,-77,-67,-70,-34,40,-21,40,40,-27,40,40,-26,-20,-33,-19,40,40,-25,40,-28,]),'INPUT':([16,25,27,29,31,33,39,42,43,46,50,51,55,59,61,66,67,72,73,74,76,79,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,111,112,114,120,121,124,126,127,129,130,136,139,143,144,146,147,],[-6,41,41,41,41,41,41,41,-81,41,41,41,-79,-80,41,41,41,-81,41,-22,41,-18,41,-71,41,41,-78,-74,-73,-72,-76,-66,-75,-68,-69,-77,-67,-70,-34,41,-21,41,41,-27,41,41,-26,-20,-33,-19,41,41,-25,41,-28,]),'IF':([16,25,27,43,72,73,74,79,86,101,111,112,114,121,127,129,130,136,139,144,146,147,],[-6,42,42,-81,-81,42,-22,-18,42,-34,42,-21,42,-27,-26,-20,-33,-19,42,-25,42,-28,]),'AND':([32,34,35,38,40,44,52,53,56,57,58,60,64,65,68,70,75,77,78,82,83,100,103,109,110,116,117,118,119,122,125,131,132,134,135,140,141,142,],[-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,85,-45,85,-38,85,85,-37,-36,-39,85,-43,85,85,-51,-50,85,85,-55,-81,85,-56,-81,-61,-63,85,-62,-65,-64,]),'LBRACE':([16,25,27,43,72,73,74,79,86,101,111,112,114,121,127,129,130,136,139,144,146,147,],[-6,43,43,-81,-81,43,-22,-18,43,-34,43,-21,43,-27,-26,-20,-33,-19,43,-25,43,-28,]),'FALSE':([16,25,27,29,31,33,39,42,43,46,50,51,55,59,61,66,67,72,73,74,76,79,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,111,112,114,120,121,124,126,127,129,130,136,139,143,144,146,147,],[-6,44,44,44,44,44,44,44,-81,44,44,44,-79,-80,44,44,44,-81,44,-22,44,-18,44,-71,44,44,-78,-74,-73,-72,-76,-66,-75,-68,-69,-77,-67,-70,-34,44,-21,44,44,-27,44,44,-26,-20,-33,-19,44,44,-25,44,-28,]),'INT':([0,1,3,6,16,18,37,43,48,54,72,79,101,121,127,129,130,136,144,147,],[9,9,-4,-5,-6,9,-7,9,9,9,9,-18,-34,-27,-26,-20,-33,-19,-25,-28,]),'GTHAN':([32,34,35,38,40,44,52,53,56,57,58,60,64,65,68,70,75,77,78,82,83,100,103,109,110,116,117,118,119,122,125,131,132,134,135,140,141,142,],[-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,88,-45,88,-38,88,88,-37,-36,-39,88,-43,88,88,-51,-50,88,88,-55,-81,88,-56,-81,-61,-63,88,-62,-65,-64,]),'GTHANEQ':([32,34,35,38,40,44,52,53,56,57,58,60,64,65,68,70,75,77,78,82,83,100,103,109,110,116,117,118,119,122,125,131,132,134,135,140,141,142,],[-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,97,-45,97,-38,97,97,-37,-36,-39,97,-43,97,97,-51,-50,97,97,-55,-81,97,-56,-81,-61,-63,97,-62,-65,-64,]),'BOOL':([0,1,3,6,16,18,37,43,48,54,72,79,101,121,127,129,130,136,144,147,],[7,7,-4,-5,-6,7,-7,7,7,7,7,-18,-34,-27,-26,-20,-33,-19,-25,-28,]),'NOT':([29,31,39,42,50,51,55,59,61,66,76,81,85,87,88,89,90,91,92,93,94,95,96,97,98,99,120,124,126,],[59,59,59,59,59,59,-79,-80,59,59,59,59,-71,59,-78,-74,-73,-72,-76,-66,-75,-68,-69,-77,-67,-70,59,59,59,]),'DECREMENT':([16,25,27,29,31,34,35,39,42,43,45,50,51,55,56,57,59,61,66,67,72,73,74,76,79,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,111,112,114,118,120,121,124,126,127,129,130,136,139,143,144,146,147,],[-6,46,46,46,46,-41,-40,46,46,-81,75,46,46,-79,-41,-40,-80,46,46,46,-81,46,-22,46,-18,46,-71,46,46,-78,-74,-73,-72,-76,-66,-75,-68,-69,-77,-67,-70,-34,46,-21,46,-55,46,-27,46,46,-26,-20,-33,-19,46,46,-25,46,-28,]),'OR':([32,34,35,38,40,44,52,53,56,57,58,60,64,65,68,70,75,77,78,82,83,100,103,109,110,116,117,118,119,122,125,131,132,134,135,140,141,142,],[-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,91,-45,91,-38,91,91,-37,-36,-39,91,-43,91,91,-51,-50,91,91,-55,-81,91,-56,-81,-61,-63,91,-62,-65,-64,]),'MOD':([32,34,35,38,40,44,52,53,56,57,58,60,64,65,68,70,75,77,78,82,83,100,103,109,110,116,117,118,119,122,125,131,132,134,135,140,141,142,],[-48,-41,-40,-54,-47,-49,-44,-46,-53,-52,99,-45,99,-38,99,99,-37,-36,-39,99,-43,99,99,-51,-50,99,99,-55,-81,99,-56,-81,-61,-63,99,-62,-65,-64,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([0,1,],[1,1,]),'unop':([29,31,39,42,50,51,61,66,76,81,87,120,124,126,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'AEOpt':([31,126,],[62,138,]),'dim_star':([119,131,],[132,140,]),'pgm':([0,],[5,]),'primary':([25,27,29,31,33,39,42,46,50,51,61,66,67,73,76,81,86,87,111,114,120,124,126,139,143,146,],[28,28,52,52,28,52,52,28,52,52,52,52,28,28,52,52,28,52,28,28,52,52,52,28,28,28,]),'newArray':([29,31,39,42,50,51,61,66,76,81,87,120,124,126,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'vardecl_star':([43,72,],[73,112,]),'dimexpr':([84,],[119,]),'varlist':([8,17,71,],[13,19,13,]),'vardecl':([0,1,43,72,],[3,3,72,72,]),'formalsOpt':([18,],[21,]),'SEOpt':([67,143,],[106,145,]),'arrayAccess':([25,27,29,31,33,39,42,46,50,51,61,66,67,73,76,81,86,87,111,114,120,124,126,139,143,146,],[34,34,56,56,34,56,56,34,56,56,56,56,34,34,56,56,34,56,34,34,56,56,56,34,34,34,]),'type':([0,1,18,43,48,54,72,],[8,8,22,71,22,84,71,]),'empty':([0,1,18,31,43,66,67,72,73,114,119,126,131,143,],[10,10,23,63,74,102,107,74,113,113,134,63,134,107,]),'formals':([18,48,],[24,80,]),'AE':([29,31,39,42,50,51,61,66,76,81,87,120,124,126,],[58,64,68,70,82,83,100,103,116,117,122,135,103,64,]),'binop':([58,64,68,70,82,83,100,103,116,117,122,135,],[87,87,87,87,87,87,87,87,87,87,87,87,]),'args':([66,124,],[104,137,]),'stmt':([25,27,73,86,111,114,139,146,],[37,49,114,121,127,114,144,147,]),'functionCall':([25,27,29,31,33,39,42,46,50,51,61,66,67,73,76,81,86,87,111,114,120,124,126,139,143,146,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'stmt_star':([73,114,],[115,128,]),'dim':([119,131,],[131,131,]),'decl_star':([0,1,],[2,11,]),'fundecl':([0,1,],[6,6,]),'argsOpt':([66,],[105,]),'lhs':([25,27,29,31,33,39,42,46,50,51,61,66,67,73,76,81,86,87,111,114,120,124,126,139,143,146,],[45,45,45,45,65,45,45,78,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'SE':([25,27,29,31,39,42,50,51,61,66,67,73,76,81,86,87,111,114,120,124,126,139,143,146,],[47,47,60,60,60,60,60,60,60,60,108,47,60,60,47,60,47,47,60,60,60,47,108,47,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pgm","S'",1,None,None,None),
  ('pgm -> decl_star','pgm',1,'p_pgm','protoplasm4.py',39),
  ('decl_star -> decl decl_star','decl_star',2,'p_decl_star','protoplasm4.py',44),
  ('decl_star -> empty','decl_star',1,'p_decl_star','protoplasm4.py',45),
  ('decl -> vardecl','decl',1,'p_decl_vardecl','protoplasm4.py',55),
  ('decl -> fundecl','decl',1,'p_decl_fundecl','protoplasm4.py',60),
  ('vardecl -> type varlist SEMICOLON','vardecl',3,'p_vardecl','protoplasm4.py',65),
  ('fundecl -> type IDENTIFIER LPAREN formalsOpt RPAREN stmt','fundecl',6,'p_fundecl','protoplasm4.py',70),
  ('formalsOpt -> formals','formalsOpt',1,'p_formalsOpt','protoplasm4.py',75),
  ('formalsOpt -> empty','formalsOpt',1,'p_formalsOpt','protoplasm4.py',76),
  ('type -> INT','type',1,'p_type_int','protoplasm4.py',86),
  ('type -> BOOL','type',1,'p_type_bool','protoplasm4.py',91),
  ('type -> VOID','type',1,'p_type_void','protoplasm4.py',96),
  ('type -> type LSQUARE RSQUARE','type',3,'p_type_array','protoplasm4.py',101),
  ('varlist -> IDENTIFIER COMMA varlist','varlist',3,'p_varlist_multi','protoplasm4.py',106),
  ('varlist -> IDENTIFIER','varlist',1,'p_varlist_single','protoplasm4.py',111),
  ('formals -> type IDENTIFIER COMMA formals','formals',4,'p_formals','protoplasm4.py',116),
  ('formals -> type IDENTIFIER','formals',2,'p_formals','protoplasm4.py',117),
  ('stmt -> SE SEMICOLON','stmt',2,'p_stmt_SE','protoplasm4.py',127),
  ('stmt -> PRINT LPAREN AE RPAREN SEMICOLON','stmt',5,'p_stmt_print','protoplasm4.py',132),
  ('stmt -> LBRACE vardecl_star stmt_star RBRACE','stmt',4,'p_stmt_block','protoplasm4.py',137),
  ('vardecl_star -> vardecl vardecl_star','vardecl_star',2,'p_vardecl_star','protoplasm4.py',142),
  ('vardecl_star -> empty','vardecl_star',1,'p_vardecl_star','protoplasm4.py',143),
  ('stmt_star -> stmt stmt_star','stmt_star',2,'p_stmt_star','protoplasm4.py',153),
  ('stmt_star -> empty','stmt_star',1,'p_stmt_star','protoplasm4.py',154),
  ('stmt -> IF AE THEN stmt ELSE stmt','stmt',6,'p_stmt_if_else','protoplasm4.py',164),
  ('stmt -> IF AE THEN stmt','stmt',4,'p_stmt_if','protoplasm4.py',169),
  ('stmt -> WHILE AE DO stmt','stmt',4,'p_stmt_while','protoplasm4.py',174),
  ('stmt -> FOR LPAREN SEOpt SEMICOLON AEOpt SEMICOLON SEOpt RPAREN stmt','stmt',9,'p_stmt_for','protoplasm4.py',179),
  ('SEOpt -> SE','SEOpt',1,'p_SEOpt','protoplasm4.py',184),
  ('SEOpt -> empty','SEOpt',1,'p_SEOpt','protoplasm4.py',185),
  ('AEOpt -> AE','AEOpt',1,'p_AEOpt','protoplasm4.py',195),
  ('AEOpt -> empty','AEOpt',1,'p_AEOpt','protoplasm4.py',196),
  ('stmt -> DO stmt WHILE AE SEMICOLON','stmt',5,'p_stmt_do_while','protoplasm4.py',207),
  ('stmt -> RETURN AEOpt SEMICOLON','stmt',3,'p_stmt_return','protoplasm4.py',212),
  ('SE -> lhs EQUALS AE','SE',3,'p_SE_assign','protoplasm4.py',217),
  ('SE -> lhs INCREMENT','SE',2,'p_SE_postinc','protoplasm4.py',222),
  ('SE -> lhs DECREMENT','SE',2,'p_SE_postdec','protoplasm4.py',227),
  ('SE -> INCREMENT lhs','SE',2,'p_SE_preinc','protoplasm4.py',232),
  ('SE -> DECREMENT lhs','SE',2,'p_SE_predec','protoplasm4.py',237),
  ('lhs -> IDENTIFIER','lhs',1,'p_lhs_id','protoplasm4.py',242),
  ('lhs -> arrayAccess','lhs',1,'p_lhs_arrayAccess','protoplasm4.py',247),
  ('AE -> AE binop AE','AE',3,'p_AE_binop','protoplasm4.py',252),
  ('AE -> unop AE','AE',2,'p_AE_unop','protoplasm4.py',257),
  ('AE -> primary','AE',1,'p_AE_primary','protoplasm4.py',262),
  ('AE -> SE','AE',1,'p_AE_SE','protoplasm4.py',267),
  ('AE -> newArray','AE',1,'p_AE_newArray','protoplasm4.py',272),
  ('primary -> INTCONST','primary',1,'p_primary_intconst','protoplasm4.py',277),
  ('primary -> TRUE','primary',1,'p_primary_true','protoplasm4.py',282),
  ('primary -> FALSE','primary',1,'p_primary_false','protoplasm4.py',287),
  ('primary -> INPUT LPAREN RPAREN','primary',3,'p_primary_input','protoplasm4.py',292),
  ('primary -> LPAREN AE RPAREN','primary',3,'p_primary_group','protoplasm4.py',297),
  ('primary -> IDENTIFIER','primary',1,'p_primary_id','protoplasm4.py',302),
  ('primary -> arrayAccess','primary',1,'p_primary_arrayAccess','protoplasm4.py',307),
  ('primary -> functionCall','primary',1,'p_primary_functionCall','protoplasm4.py',312),
  ('arrayAccess -> primary LSQUARE AE RSQUARE','arrayAccess',4,'p_arrayAccess','protoplasm4.py',317),
  ('functionCall -> IDENTIFIER LPAREN argsOpt RPAREN','functionCall',4,'p_functionCall','protoplasm4.py',322),
  ('argsOpt -> args','argsOpt',1,'p_argsOpt','protoplasm4.py',327),
  ('argsOpt -> empty','argsOpt',1,'p_argsOpt','protoplasm4.py',328),
  ('args -> AE COMMA args','args',3,'p_args','protoplasm4.py',338),
  ('args -> AE','args',1,'p_args','protoplasm4.py',339),
  ('newArray -> NEW type dimexpr dim_star','newArray',4,'p_newArray','protoplasm4.py',349),
  ('dim_star -> dim dim_star','dim_star',2,'p_dimstar','protoplasm4.py',354),
  ('dim_star -> empty','dim_star',1,'p_dimstar','protoplasm4.py',355),
  ('dimexpr -> LSQUARE AE RSQUARE','dimexpr',3,'p_dimexpr','protoplasm4.py',365),
  ('dim -> LSQUARE RSQUARE','dim',2,'p_dim','protoplasm4.py',370),
  ('binop -> PLUS','binop',1,'p_binop','protoplasm4.py',376),
  ('binop -> MINUS','binop',1,'p_binop','protoplasm4.py',377),
  ('binop -> STAR','binop',1,'p_binop','protoplasm4.py',378),
  ('binop -> DIV','binop',1,'p_binop','protoplasm4.py',379),
  ('binop -> MOD','binop',1,'p_binop','protoplasm4.py',380),
  ('binop -> AND','binop',1,'p_binop','protoplasm4.py',381),
  ('binop -> OR','binop',1,'p_binop','protoplasm4.py',382),
  ('binop -> EQUAL','binop',1,'p_binop','protoplasm4.py',383),
  ('binop -> NEQUAL','binop',1,'p_binop','protoplasm4.py',384),
  ('binop -> LTHANEQ','binop',1,'p_binop','protoplasm4.py',385),
  ('binop -> LTHAN','binop',1,'p_binop','protoplasm4.py',386),
  ('binop -> GTHANEQ','binop',1,'p_binop','protoplasm4.py',387),
  ('binop -> GTHAN','binop',1,'p_binop','protoplasm4.py',388),
  ('unop -> MINUS','unop',1,'p_unop','protoplasm4.py',394),
  ('unop -> NOT','unop',1,'p_unop','protoplasm4.py',395),
  ('empty -> <empty>','empty',0,'p_empty','protoplasm4.py',409),
]
