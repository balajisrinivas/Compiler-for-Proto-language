
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xb2\xbf$apR\xf5Y\xd9q{\x83\x14\xd0\x96\x9e'
    
_lr_action_items = {'DO':([0,1,2,7,8,9,13,16,18,31,32,33,35,36,38,40,44,45,48,49,50,51,53,57,61,80,82,85,87,88,90,91,92,95,96,97,98,99,100,102,106,107,109,111,112,],[-59,-59,9,-17,-16,9,-29,9,-59,-38,61,-37,-39,-33,-34,-27,9,-25,-26,-28,-4,-18,-43,-32,9,9,-24,-59,-35,-59,-9,-31,-36,-8,-6,-30,-42,-11,-40,-5,9,-41,-7,9,-10,]),'STAR':([13,31,32,33,35,36,38,40,43,45,48,49,53,57,58,76,82,83,85,86,87,88,91,92,97,98,100,101,105,107,],[-29,-38,70,-37,-39,-33,-34,-27,70,-25,-26,-28,-43,-32,70,70,70,70,-59,70,-35,-59,70,-36,-30,-42,-40,70,70,-41,]),'LPAREN':([10,11,15,17,27,28,30,34,37,39,46,47,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,89,94,],[28,39,41,28,28,28,-57,75,-58,28,28,28,28,-49,28,-56,-52,-51,-50,-54,-44,-53,-46,-47,-55,-45,-48,28,28,]),'THEN':([13,31,33,35,36,38,40,43,45,48,49,53,57,82,85,87,88,91,92,97,98,100,107,],[-29,-38,-37,-39,-33,-34,-27,80,-25,-26,-28,-43,-32,-24,-59,-35,-59,-31,-36,-30,-42,-40,-41,]),'EQUAL':([13,31,32,33,35,36,38,40,43,45,48,49,53,57,58,76,82,83,85,86,87,88,91,92,97,98,100,101,105,107,],[-29,-38,65,-37,-39,-33,-34,-27,65,-25,-26,-28,-43,-32,65,65,65,65,-59,65,-35,-59,65,-36,-30,-42,-40,65,65,-41,]),'WHILE':([0,1,2,7,8,9,16,18,26,44,50,51,61,80,90,95,96,99,102,106,109,111,112,],[-59,-59,10,-17,-16,10,10,-59,56,10,-4,-18,10,10,-9,-8,-6,-11,-5,10,-7,10,-10,]),'PRINT':([0,1,2,7,8,9,16,18,44,50,51,61,80,90,95,96,99,102,106,109,111,112,],[-59,-59,11,-17,-16,11,11,-59,11,-4,-18,11,11,-9,-8,-6,-11,-5,11,-7,11,-10,]),'NEW':([10,17,27,28,30,37,39,46,47,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,89,94,],[29,29,29,29,-57,-58,29,29,29,29,-49,29,-56,-52,-51,-50,-54,-44,-53,-46,-47,-55,-45,-48,29,29,]),'DIV':([13,31,32,33,35,36,38,40,43,45,48,49,53,57,58,76,82,83,85,86,87,88,91,92,97,98,100,101,105,107,],[-29,-38,71,-37,-39,-33,-34,-27,71,-25,-26,-28,-43,-32,71,71,71,71,-59,71,-35,-59,71,-36,-30,-42,-40,71,71,-41,]),'TRUE':([10,17,27,28,30,37,39,46,47,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,89,94,],[31,31,31,31,-57,-58,31,31,31,31,-49,31,-56,-52,-51,-50,-54,-44,-53,-46,-47,-55,-45,-48,31,31,]),'MINUS':([10,13,17,27,28,30,31,32,33,35,36,37,38,39,40,43,45,46,47,48,49,53,56,57,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,82,83,85,86,87,88,89,91,92,94,97,98,100,101,105,107,],[30,-29,30,30,30,-57,-38,73,-37,-39,-33,-58,-34,30,-27,73,-25,30,30,-26,-28,-43,30,-32,73,-49,30,-56,-52,-51,-50,-54,-44,-53,-46,-47,-55,-45,-48,73,73,73,-59,73,-35,-59,30,73,-36,30,-30,-42,-40,73,73,-41,]),'RSQUARE':([13,31,33,35,36,38,40,45,48,49,53,55,57,82,83,85,87,88,91,92,97,98,100,101,107,],[-29,-38,-37,-39,-33,-34,-27,-25,-26,-28,-43,85,-32,-24,97,-59,-35,-59,-31,-36,-30,-42,-40,107,-41,]),'RPAREN':([13,31,33,35,36,38,40,45,48,49,53,57,58,75,76,78,79,82,85,87,88,91,92,97,98,100,107,108,110,],[-29,-38,-37,-39,-33,-34,-27,-25,-26,-28,-43,-32,87,92,93,-13,-12,-24,-59,-35,-59,-31,-36,-30,-42,-40,-41,-59,111,]),'SEMICOLON':([13,22,23,24,25,31,33,35,36,38,40,41,45,48,49,53,54,57,77,78,79,82,84,85,86,87,88,91,92,93,94,97,98,100,103,104,105,107,],[-29,50,51,-22,-59,-38,-37,-39,-33,-34,-27,-59,-25,-26,-28,-43,-23,-32,94,-13,-12,-24,-21,-59,99,-35,-59,-31,-36,102,-59,-30,-42,-40,108,-15,-14,-41,]),'PLUS':([13,31,32,33,35,36,38,40,43,45,48,49,53,57,58,76,82,83,85,86,87,88,91,92,97,98,100,101,105,107,],[-29,-38,68,-37,-39,-33,-34,-27,68,-25,-26,-28,-43,-32,68,68,68,68,-59,68,-35,-59,68,-36,-30,-42,-40,68,68,-41,]),'INCREMENT':([0,1,2,7,8,9,10,13,16,17,18,20,27,28,30,36,37,39,41,44,46,47,50,51,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,80,89,90,94,95,96,97,99,102,106,108,109,111,112,],[-59,-59,12,-17,-16,12,12,-29,12,12,-59,45,12,12,-57,45,-58,12,12,12,12,12,-4,-18,12,-49,12,12,-56,-52,-51,-50,-54,-44,-53,-46,-47,-55,-45,-48,12,12,-9,12,-8,-6,-30,-11,-5,12,12,-7,12,-10,]),'LTHANEQ':([13,31,32,33,35,36,38,40,43,45,48,49,53,57,58,76,82,83,85,86,87,88,91,92,97,98,100,101,105,107,],[-29,-38,69,-37,-39,-33,-34,-27,69,-25,-26,-28,-43,-32,69,69,69,69,-59,69,-35,-59,69,-36,-30,-42,-40,69,69,-41,]),'COMMA':([24,25,53,54,85,98,],[52,-59,-43,-23,-59,-42,]),'IDENTIFIER':([0,1,2,4,5,6,7,8,9,10,12,16,17,18,21,27,28,30,37,39,41,44,46,47,50,51,52,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,80,89,90,94,95,96,99,102,106,108,109,111,112,],[-59,-59,13,-20,25,-19,-17,-16,13,13,13,13,13,-59,13,13,13,-57,-58,13,13,13,13,13,-4,-18,25,13,-49,13,13,-56,-52,-51,-50,-54,-44,-53,-46,-47,-55,-45,-48,13,13,-9,13,-8,-6,-11,-5,13,13,-7,13,-10,]),'$end':([0,1,2,3,7,8,14,16,19,42,50,51,90,95,96,99,102,109,112,],[-59,-59,-59,0,-17,-16,-3,-59,-1,-2,-4,-18,-9,-8,-6,-11,-5,-7,-10,]),'RBRACE':([1,7,8,14,16,18,42,44,50,51,81,90,95,96,99,102,109,112,],[-59,-17,-16,-3,-59,-59,-2,-59,-4,-18,96,-9,-8,-6,-11,-5,-7,-10,]),'FOR':([0,1,2,7,8,9,16,18,44,50,51,61,80,90,95,96,99,102,106,109,111,112,],[-59,-59,15,-17,-16,15,15,-59,15,-4,-18,15,15,-9,-8,-6,-11,-5,15,-7,15,-10,]),'NEQUAL':([13,31,32,33,35,36,38,40,43,45,48,49,53,57,58,76,82,83,85,86,87,88,91,92,97,98,100,101,105,107,],[-29,-38,64,-37,-39,-33,-34,-27,64,-25,-26,-28,-43,-32,64,64,64,64,-59,64,-35,-59,64,-36,-30,-42,-40,64,64,-41,]),'EQUALS':([13,20,36,97,],[-29,46,46,-30,]),'ELSE':([50,90,95,96,99,102,109,112,],[-4,-9,106,-6,-11,-5,-7,-10,]),'LTHAN':([13,31,32,33,35,36,38,40,43,45,48,49,53,57,58,76,82,83,85,86,87,88,91,92,97,98,100,101,105,107,],[-29,-38,67,-37,-39,-33,-34,-27,67,-25,-26,-28,-43,-32,67,67,67,67,-59,67,-35,-59,67,-36,-30,-42,-40,67,67,-41,]),'LSQUARE':([4,6,13,20,25,36,40,49,59,85,88,97,107,],[-20,-19,-29,47,55,47,47,47,89,55,55,-30,-41,]),'INTCONST':([10,17,27,28,30,37,39,46,47,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,89,94,],[33,33,33,33,-57,-58,33,33,33,33,-49,33,-56,-52,-51,-50,-54,-44,-53,-46,-47,-55,-45,-48,33,33,]),'INPUT':([10,17,27,28,30,37,39,46,47,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,89,94,],[34,34,34,34,-57,-58,34,34,34,34,-49,34,-56,-52,-51,-50,-54,-44,-53,-46,-47,-55,-45,-48,34,34,]),'IF':([0,1,2,7,8,9,16,18,44,50,51,61,80,90,95,96,99,102,106,109,111,112,],[-59,-59,17,-17,-16,17,17,-59,17,-4,-18,17,17,-9,-8,-6,-11,-5,17,-7,17,-10,]),'AND':([13,31,32,33,35,36,38,40,43,45,48,49,53,57,58,76,82,83,85,86,87,88,91,92,97,98,100,101,105,107,],[-29,-38,60,-37,-39,-33,-34,-27,60,-25,-26,-28,-43,-32,60,60,60,60,-59,60,-35,-59,60,-36,-30,-42,-40,60,60,-41,]),'LBRACE':([0,1,2,7,8,9,16,18,44,50,51,61,80,90,95,96,99,102,106,109,111,112,],[-59,-59,18,-17,-16,18,18,-59,18,-4,-18,18,18,-9,-8,-6,-11,-5,18,-7,18,-10,]),'FALSE':([10,17,27,28,30,37,39,46,47,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,89,94,],[35,35,35,35,-57,-58,35,35,35,35,-49,35,-56,-52,-51,-50,-54,-44,-53,-46,-47,-55,-45,-48,35,35,]),'INT':([0,1,18,29,51,],[6,6,6,6,-18,]),'GTHAN':([13,31,32,33,35,36,38,40,43,45,48,49,53,57,58,76,82,83,85,86,87,88,91,92,97,98,100,101,105,107,],[-29,-38,63,-37,-39,-33,-34,-27,63,-25,-26,-28,-43,-32,63,63,63,63,-59,63,-35,-59,63,-36,-30,-42,-40,63,63,-41,]),'GTHANEQ':([13,31,32,33,35,36,38,40,43,45,48,49,53,57,58,76,82,83,85,86,87,88,91,92,97,98,100,101,105,107,],[-29,-38,72,-37,-39,-33,-34,-27,72,-25,-26,-28,-43,-32,72,72,72,72,-59,72,-35,-59,72,-36,-30,-42,-40,72,72,-41,]),'BOOL':([0,1,18,29,51,],[4,4,4,4,-18,]),'NOT':([10,17,27,28,30,37,39,46,47,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,89,94,],[37,37,37,37,-57,-58,37,37,37,37,-49,37,-56,-52,-51,-50,-54,-44,-53,-46,-47,-55,-45,-48,37,37,]),'DECREMENT':([0,1,2,7,8,9,10,13,16,17,18,20,27,28,30,36,37,39,41,44,46,47,50,51,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,80,89,90,94,95,96,97,99,102,106,108,109,111,112,],[-59,-59,21,-17,-16,21,21,-29,21,21,-59,48,21,21,-57,48,-58,21,21,21,21,21,-4,-18,21,-49,21,21,-56,-52,-51,-50,-54,-44,-53,-46,-47,-55,-45,-48,21,21,-9,21,-8,-6,-30,-11,-5,21,21,-7,21,-10,]),'OR':([13,31,32,33,35,36,38,40,43,45,48,49,53,57,58,76,82,83,85,86,87,88,91,92,97,98,100,101,105,107,],[-29,-38,66,-37,-39,-33,-34,-27,66,-25,-26,-28,-43,-32,66,66,66,66,-59,66,-35,-59,66,-36,-30,-42,-40,66,66,-41,]),'MOD':([13,31,32,33,35,36,38,40,43,45,48,49,53,57,58,76,82,83,85,86,87,88,91,92,97,98,100,101,105,107,],[-29,-38,74,-37,-39,-33,-34,-27,74,-25,-26,-28,-43,-32,74,74,74,74,-59,74,-35,-59,74,-36,-30,-42,-40,74,74,-41,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([0,1,18,],[1,1,1,]),'unop':([10,17,27,28,39,46,47,56,62,89,94,],[27,27,27,27,27,27,27,27,27,27,27,]),'AE':([10,17,27,28,39,46,47,56,62,89,94,],[32,43,57,58,76,82,83,86,91,101,105,]),'stmt_seq':([2,16,44,],[19,42,81,]),'binop':([32,43,57,58,76,82,83,86,91,101,105,],[62,62,62,62,62,62,62,62,62,62,62,]),'decl_seq':([0,1,18,],[2,8,44,]),'dimexpr':([59,],[88,]),'pgm':([0,],[3,]),'stmt':([2,9,16,44,61,80,106,111,],[16,26,16,16,90,95,109,112,]),'varlist':([5,52,],[23,84,]),'SEOpt':([41,108,],[77,110,]),'lhs':([2,9,10,12,16,17,21,27,28,39,41,44,46,47,56,61,62,80,89,94,106,108,111,],[20,20,36,40,20,36,49,36,36,36,20,20,36,36,36,20,36,20,36,36,20,20,20,]),'SE':([2,9,10,16,17,27,28,39,41,44,46,47,56,61,62,80,89,94,106,108,111,],[22,22,38,22,38,38,38,38,79,22,38,38,38,22,38,22,38,38,22,79,22,]),'var':([5,52,],[24,24,]),'AEOpt':([94,],[103,]),'type':([0,1,18,29,],[5,5,5,59,]),'empty':([0,1,2,16,18,25,41,44,85,88,94,108,],[7,7,14,14,7,53,78,14,53,53,104,78,]),'dimstar':([25,85,88,],[54,98,100,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pgm","S'",1,None,None,None),
  ('pgm -> decl_seq stmt_seq','pgm',2,'p_pgm','protoplasm_3.py',35),
  ('stmt_seq -> stmt stmt_seq','stmt_seq',2,'p_stmt_seq','protoplasm_3.py',40),
  ('stmt_seq -> empty','stmt_seq',1,'p_stmt_seq','protoplasm_3.py',41),
  ('stmt -> SE SEMICOLON','stmt',2,'p_stmt_se','protoplasm_3.py',51),
  ('stmt -> PRINT LPAREN AE RPAREN SEMICOLON','stmt',5,'p_stmt_print','protoplasm_3.py',56),
  ('stmt -> LBRACE decl_seq stmt_seq RBRACE','stmt',4,'p_stmt_block','protoplasm_3.py',61),
  ('stmt -> IF AE THEN stmt ELSE stmt','stmt',6,'p_stmt_if_else','protoplasm_3.py',66),
  ('stmt -> IF AE THEN stmt','stmt',4,'p_stmt_if','protoplasm_3.py',71),
  ('stmt -> WHILE AE DO stmt','stmt',4,'p_stmt_while','protoplasm_3.py',76),
  ('stmt -> FOR LPAREN SEOpt SEMICOLON AEOpt SEMICOLON SEOpt RPAREN stmt','stmt',9,'p_stmt_for','protoplasm_3.py',81),
  ('stmt -> DO stmt WHILE AE SEMICOLON','stmt',5,'p_stmt_do_while','protoplasm_3.py',86),
  ('SEOpt -> SE','SEOpt',1,'p_SEOpt','protoplasm_3.py',91),
  ('SEOpt -> empty','SEOpt',1,'p_SEOpt','protoplasm_3.py',92),
  ('AEOpt -> AE','AEOpt',1,'p_AEOpt','protoplasm_3.py',102),
  ('AEOpt -> empty','AEOpt',1,'p_AEOpt','protoplasm_3.py',103),
  ('decl_seq -> decl decl_seq','decl_seq',2,'p_decl_seq','protoplasm_3.py',113),
  ('decl_seq -> empty','decl_seq',1,'p_decl_seq','protoplasm_3.py',114),
  ('decl -> type varlist SEMICOLON','decl',3,'p_decl','protoplasm_3.py',125),
  ('type -> INT','type',1,'p_type_int','protoplasm_3.py',130),
  ('type -> BOOL','type',1,'p_type_bool','protoplasm_3.py',135),
  ('varlist -> var COMMA varlist','varlist',3,'p_varlist_multi','protoplasm_3.py',140),
  ('varlist -> var','varlist',1,'p_varlist_single','protoplasm_3.py',145),
  ('var -> IDENTIFIER dimstar','var',2,'p_var','protoplasm_3.py',150),
  ('SE -> lhs EQUALS AE','SE',3,'p_SE_assign','protoplasm_3.py',155),
  ('SE -> lhs INCREMENT','SE',2,'p_SE_postinc','protoplasm_3.py',160),
  ('SE -> lhs DECREMENT','SE',2,'p_SE_postdec','protoplasm_3.py',165),
  ('SE -> INCREMENT lhs','SE',2,'p_SE_preinc','protoplasm_3.py',170),
  ('SE -> DECREMENT lhs','SE',2,'p_SE_predec','protoplasm_3.py',175),
  ('lhs -> IDENTIFIER','lhs',1,'p_lhs','protoplasm_3.py',180),
  ('lhs -> lhs LSQUARE AE RSQUARE','lhs',4,'p_lhs','protoplasm_3.py',181),
  ('AE -> AE binop AE','AE',3,'p_AE_binop','protoplasm_3.py',192),
  ('AE -> unop AE','AE',2,'p_AE_unop','protoplasm_3.py',197),
  ('AE -> lhs','AE',1,'p_AE_lhs','protoplasm_3.py',202),
  ('AE -> SE','AE',1,'p_AE_se','protoplasm_3.py',207),
  ('AE -> LPAREN AE RPAREN','AE',3,'p_AE_ae','protoplasm_3.py',212),
  ('AE -> INPUT LPAREN RPAREN','AE',3,'p_AE_input','protoplasm_3.py',217),
  ('AE -> INTCONST','AE',1,'p_AE_intconst','protoplasm_3.py',222),
  ('AE -> TRUE','AE',1,'p_AE_true','protoplasm_3.py',227),
  ('AE -> FALSE','AE',1,'p_AE_false','protoplasm_3.py',232),
  ('AE -> NEW type dimexpr dimstar','AE',4,'p_AE_new','protoplasm_3.py',237),
  ('dimexpr -> LSQUARE AE RSQUARE','dimexpr',3,'p_dimexpr','protoplasm_3.py',242),
  ('dimstar -> LSQUARE RSQUARE dimstar','dimstar',3,'p_dimstar','protoplasm_3.py',247),
  ('dimstar -> empty','dimstar',1,'p_dimstar','protoplasm_3.py',248),
  ('binop -> PLUS','binop',1,'p_binop','protoplasm_3.py',259),
  ('binop -> MINUS','binop',1,'p_binop','protoplasm_3.py',260),
  ('binop -> STAR','binop',1,'p_binop','protoplasm_3.py',261),
  ('binop -> DIV','binop',1,'p_binop','protoplasm_3.py',262),
  ('binop -> MOD','binop',1,'p_binop','protoplasm_3.py',263),
  ('binop -> AND','binop',1,'p_binop','protoplasm_3.py',264),
  ('binop -> OR','binop',1,'p_binop','protoplasm_3.py',265),
  ('binop -> EQUAL','binop',1,'p_binop','protoplasm_3.py',266),
  ('binop -> NEQUAL','binop',1,'p_binop','protoplasm_3.py',267),
  ('binop -> LTHANEQ','binop',1,'p_binop','protoplasm_3.py',268),
  ('binop -> LTHAN','binop',1,'p_binop','protoplasm_3.py',269),
  ('binop -> GTHANEQ','binop',1,'p_binop','protoplasm_3.py',270),
  ('binop -> GTHAN','binop',1,'p_binop','protoplasm_3.py',271),
  ('unop -> MINUS','unop',1,'p_unop','protoplasm_3.py',278),
  ('unop -> NOT','unop',1,'p_unop','protoplasm_3.py',279),
  ('empty -> <empty>','empty',0,'p_empty','protoplasm_3.py',294),
]
